package aws

import (
	"context"
	"fmt"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2"
	"github.com/aws/aws-sdk-go-v2/service/ec2/types"
)

type EC2DescribeInstancesAPI interface {
	DescribeInstances(ctx context.Context,
		params *ec2.DescribeInstancesInput,
		optFns ...func(*ec2.Options)) (*ec2.DescribeInstancesOutput, error)
}

func GetInstances(c context.Context, api EC2DescribeInstancesAPI, input *ec2.DescribeInstancesInput) (*ec2.DescribeInstancesOutput, error) {
	return api.DescribeInstances(c, input)
}

func ec2Fn(sess aws.Config, tags []string, chaos string, number int) {
	svc := ec2.NewFromConfig(sess)
	tagsMap := make(map[string]string)
	for _, kv_tag := range tags {
		parts := strings.Split(kv_tag, ":")
		key := "tag:" + parts[0]
		tagsMap[key] = parts[1]
	}

	input := &ec2.DescribeInstancesInput{
		Filters: []types.Filter{
			{
				Name:   aws.String("tag:Name"),
				Values: []string{*aws.String("test")},
			},
			{
				Name:   aws.String("instance-state-name"),
				Values: []string{*aws.String("running")},
			},
		},
	}
	result, err := GetInstances(context.TODO(), svc, input)
	if err != nil {
		fmt.Println("Got an error retrieving information about your Amazon EC2 instances:")
		fmt.Println(err)
		return
	}

	for _, r := range result.Reservations {
		fmt.Println("Reservation ID: " + *r.ReservationId)
		fmt.Println("Instance IDs:")
		for _, i := range r.Instances {
			fmt.Println("   " + *i.InstanceId)
		}

		fmt.Println(" ")
	}
	fmt.Println(tagsMap)
	fmt.Println(tags, chaos, number)

}
